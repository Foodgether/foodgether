// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  phoneNumber       String @unique
  pin    String
  orders UserOrder[]
  createdOrders Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Restaurant {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  restaurantId Int @unique
  deliveryId Int @unique
  menu Menu?
  name String
  url String
  address String
  position Location
  photos Photo[]
  priceRange PriceRange
  isQualityMerchant Boolean
}

model Menu {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String @db.ObjectId
  dishTypes DishType[]
}

model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  inviteId String @unique
  restaurantId Int
  restaurant OrderRestaurant
  menu OrderMenu
  orders UserOrder[]
  createdBy User @relation(fields: [createdUserId], references: [id])
  createdUserId String @db.ObjectId
}

model UserOrder {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  order Order @relation(fields: [orderId], references: [id])
  orderId String @db.ObjectId
  detail OrderDetail[]
}

type OrderRestaurant {
  id String
  restaurantId Int
  deliveryId Int
  name String
  url String
  address String
  position Location
  photos Photo[]
  priceRange PriceRange
  isQualityMerchant Boolean
}

type OrderMenu {
  id String
  restaurantId String @db.ObjectId
  dishTypes DishType[]
}

type Location {
  latitude Float
  longitude Float
}

type PriceRange {
  minPrice Int
  maxPrice Int
}

type Photo {
  width Int
  height Int
  value String
}

type DishType {
  id Int
  name String
  dishes Dish[]
}

type Dish {
  id Int
  name String
  description String
  price Price
  discountPrice Price?
  isAvailable Boolean
  isActive Boolean
  photos Photo[]
}

type Price {
  text String
  unit String
  value Int
}

type OrderDetail {
  dishId Int
  dishTypeId Int
  quantity Int
}